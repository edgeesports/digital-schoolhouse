<?php
// This script and data application were generated by AppGini 5.72
// Download AppGini for free from https://bigprof.com/appgini/download/

	$currDir=dirname(__FILE__);
	include("$currDir/defaultLang.php");
	include("$currDir/language.php");
	include("$currDir/lib.php");
	@include("$currDir/hooks/students.php");
	include("$currDir/students_dml.php");

	// mm: can the current member access this page?
	$perm=getTablePermissions('students');
	if(!$perm[0]){
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout("window.location=\'index.php?signOut=1\'", 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = "students";

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = array(   
		"`students`.`id`" => "id",
		"`students`.`profile_pic`" => "profile_pic",
		"`students`.`first_name`" => "first_name",
		"`students`.`last_name`" => "last_name",
		"`students`.`gamertag`" => "gamertag",
		"`students`.`gender`" => "gender",
		"IF(    CHAR_LENGTH(`schools1`.`school_name`), CONCAT_WS('',   `schools1`.`school_name`), '') /* My School */" => "school",
		"`students`.`year_group`" => "year_group",
		"`students`.`tutor_group`" => "tutor_group",
		"IF(    CHAR_LENGTH(`role_types1`.`role_type`), CONCAT_WS('',   `role_types1`.`role_type`), '') /* Role Type */" => "role_type",
		"IF(    CHAR_LENGTH(`roles1`.`role`), CONCAT_WS('',   `roles1`.`role`), '') /* Role */" => "role",
		"IF(    CHAR_LENGTH(`teams1`.`team_name`), CONCAT_WS('',   `teams1`.`team_name`), '') /* My Team */" => "team",
		"`students`.`email`" => "email",
		"`students`.`profile_text`" => "profile_text",
		"`students`.`overwatch_stats`" => "overwatch_stats",
		"`students`.`created_by`" => "created_by",
		"`students`.`edited_by`" => "edited_by"
	);
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = array(   
		1 => '`students`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => '`schools1`.`school_name`',
		8 => 8,
		9 => 9,
		10 => '`role_types1`.`role_type`',
		11 => '`roles1`.`role`',
		12 => '`teams1`.`team_name`',
		13 => 13,
		14 => 14,
		15 => 15,
		16 => 16,
		17 => 17
	);

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = array(   
		"`students`.`id`" => "id",
		"`students`.`profile_pic`" => "profile_pic",
		"`students`.`first_name`" => "first_name",
		"`students`.`last_name`" => "last_name",
		"`students`.`gamertag`" => "gamertag",
		"`students`.`gender`" => "gender",
		"IF(    CHAR_LENGTH(`schools1`.`school_name`), CONCAT_WS('',   `schools1`.`school_name`), '') /* My School */" => "school",
		"`students`.`year_group`" => "year_group",
		"`students`.`tutor_group`" => "tutor_group",
		"IF(    CHAR_LENGTH(`role_types1`.`role_type`), CONCAT_WS('',   `role_types1`.`role_type`), '') /* Role Type */" => "role_type",
		"IF(    CHAR_LENGTH(`roles1`.`role`), CONCAT_WS('',   `roles1`.`role`), '') /* Role */" => "role",
		"IF(    CHAR_LENGTH(`teams1`.`team_name`), CONCAT_WS('',   `teams1`.`team_name`), '') /* My Team */" => "team",
		"`students`.`email`" => "email",
		"`students`.`profile_text`" => "profile_text",
		"`students`.`overwatch_stats`" => "overwatch_stats",
		"`students`.`created_by`" => "created_by",
		"`students`.`edited_by`" => "edited_by"
	);
	// Fields that can be filtered
	$x->QueryFieldsFilters = array(   
		"`students`.`id`" => "ID",
		"`students`.`first_name`" => "First Name",
		"`students`.`last_name`" => "Last Name",
		"`students`.`gamertag`" => "Gamertag or Nickname",
		"`students`.`gender`" => "Gender",
		"IF(    CHAR_LENGTH(`schools1`.`school_name`), CONCAT_WS('',   `schools1`.`school_name`), '') /* My School */" => "My School",
		"`students`.`year_group`" => "Year Group",
		"`students`.`tutor_group`" => "Tutor Group",
		"IF(    CHAR_LENGTH(`role_types1`.`role_type`), CONCAT_WS('',   `role_types1`.`role_type`), '') /* Role Type */" => "Role Type",
		"IF(    CHAR_LENGTH(`roles1`.`role`), CONCAT_WS('',   `roles1`.`role`), '') /* Role */" => "Role",
		"IF(    CHAR_LENGTH(`teams1`.`team_name`), CONCAT_WS('',   `teams1`.`team_name`), '') /* My Team */" => "My Team",
		"`students`.`email`" => "Email",
		"`students`.`profile_text`" => "Profile Text",
		"`students`.`overwatch_stats`" => "Overwatch Stats",
		"`students`.`created_by`" => "Created by",
		"`students`.`edited_by`" => "Edited by"
	);

	// Fields that can be quick searched
	$x->QueryFieldsQS = array(   
		"`students`.`id`" => "id",
		"`students`.`first_name`" => "first_name",
		"`students`.`last_name`" => "last_name",
		"`students`.`gamertag`" => "gamertag",
		"`students`.`gender`" => "gender",
		"IF(    CHAR_LENGTH(`schools1`.`school_name`), CONCAT_WS('',   `schools1`.`school_name`), '') /* My School */" => "school",
		"`students`.`year_group`" => "year_group",
		"`students`.`tutor_group`" => "tutor_group",
		"IF(    CHAR_LENGTH(`role_types1`.`role_type`), CONCAT_WS('',   `role_types1`.`role_type`), '') /* Role Type */" => "role_type",
		"IF(    CHAR_LENGTH(`roles1`.`role`), CONCAT_WS('',   `roles1`.`role`), '') /* Role */" => "role",
		"IF(    CHAR_LENGTH(`teams1`.`team_name`), CONCAT_WS('',   `teams1`.`team_name`), '') /* My Team */" => "team",
		"`students`.`email`" => "email",
		"`students`.`profile_text`" => "profile_text",
		"`students`.`overwatch_stats`" => "overwatch_stats",
		"`students`.`created_by`" => "created_by",
		"`students`.`edited_by`" => "edited_by"
	);

	// Lookup fields that can be used as filterers
	$x->filterers = array(  'school' => 'My School', 'role_type' => 'Role Type', 'role' => 'Role', 'team' => 'My Team');

	$x->QueryFrom = "`students` LEFT JOIN `schools` as schools1 ON `schools1`.`id`=`students`.`school` LEFT JOIN `role_types` as role_types1 ON `role_types1`.`id`=`students`.`role_type` LEFT JOIN `roles` as roles1 ON `roles1`.`id`=`students`.`role` LEFT JOIN `teams` as teams1 ON `teams1`.`id`=`students`.`team` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm[2]==0 ? 1 : 0);
	$x->AllowDelete = $perm[4];
	$x->AllowMassDelete = true;
	$x->AllowInsert = $perm[1];
	$x->AllowUpdate = $perm[3];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 0;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation["quick search"];
	$x->ScriptFileName = "students_view.php";
	$x->RedirectAfterInsert = "students_view.php?SelectedID=#ID#";
	$x->TableTitle = "Students";
	$x->TableIcon = "resources/table_icons/user.png";
	$x->PrimaryKey = "`students`.`id`";

	$x->ColWidth   = array(  150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150);
	$x->ColCaption = array("Profile Pic", "First Name", "Last Name", "Gamertag or Nickname", "Gender", "My School", "Year Group", "Tutor Group", "Role", "My Team", "Email", "Created by");
	$x->ColFieldName = array('profile_pic', 'first_name', 'last_name', 'gamertag', 'gender', 'school', 'year_group', 'tutor_group', 'role', 'team', 'email', 'created_by');
	$x->ColNumber  = array(2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16);

	// template paths below are based on the app main directory
	$x->Template = 'templates/students_templateTV.html';
	$x->SelectedTemplate = 'templates/students_templateTVS.html';
	$x->TemplateDV = 'templates/students_templateDV.html';
	$x->TemplateDVP = 'templates/students_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HighlightColor = '#FFF0C2';

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, array('user', 'group'))){ $DisplayRecords = 'all'; }
	if($perm[2]==1 || ($perm[2]>1 && $DisplayRecords=='user' && !$_REQUEST['NoFilter_x'])){ // view owner only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `students`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='students' and lcase(membership_userrecords.memberID)='".getLoggedMemberID()."'";
	}elseif($perm[2]==2 || ($perm[2]>2 && $DisplayRecords=='group' && !$_REQUEST['NoFilter_x'])){ // view group only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `students`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='students' and membership_userrecords.groupID='".getLoggedGroupID()."'";
	}elseif($perm[2]==3){ // view all
		// no further action
	}elseif($perm[2]==0){ // view none
		$x->QueryFields = array("Not enough permissions" => "NEP");
		$x->QueryFrom = '`students`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: students_init
	$render=TRUE;
	if(function_exists('students_init')){
		$args=array();
		$render=students_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: students_header
	$headerCode='';
	if(function_exists('students_header')){
		$args=array();
		$headerCode=students_header($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$headerCode){
		include_once("$currDir/header.php"); 
	}else{
		ob_start(); include_once("$currDir/header.php"); $dHeader=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%HEADER%%>', $dHeader, $headerCode);
	}

	echo $x->HTML;
	// hook: students_footer
	$footerCode='';
	if(function_exists('students_footer')){
		$args=array();
		$footerCode=students_footer($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$footerCode){
		include_once("$currDir/footer.php"); 
	}else{
		ob_start(); include_once("$currDir/footer.php"); $dFooter=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%FOOTER%%>', $dFooter, $footerCode);
	}
?>